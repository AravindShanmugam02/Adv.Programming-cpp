string username, line;ifstream encryption;char a1[20];int b1[20], encrypt1[20], n = 0, i = 0, v, retries = 3;int flag;encryption.open("C:\\Users\\gokul\\source\\repos\\password.txt", ios::in);cout << "\n Enter your username :: ";cin >> username;while (getline(encryption, line)){	string auth_user;	v = 0;	while (line[v] != '\t')	{		auth_user = auth_user + line[v];		v++;	}	if (auth_user == username)	{		flag = 1;		cout << "\n Username found";		do		{			cout << "\n Enter your password please :: ";			cin >> a1;			while (a1[i] != '\0')			{				i++;				n++;			}			int* c1;			int* d1;			c1 = ASCII_convertor(a1, b1, n);			d1 = Password_encryptor(c1, encrypt1, n);			string encrypt;			string encrypt_file;			int pos1 = 0;			int pos2 = 0;			for (int i = 0; i < n; i++)			{				encrypt += to_string(*(d1 + i));			}			while (line[pos1] != '\t')			{				pos1++;			}			pos1 += 1;			cout << "\n\n";			do			{				encrypt_file = encrypt_file + line[pos1];				pos1++;				pos2++;			} while (pos1 < line.length());			if (encrypt == encrypt_file)			{				cout << "\n\nUser Authenticated !!!";				retries = 0;			}			else			{				cout << "\n\nUser Authentication Failed !!!";				retries--;			}		} while (retries != 0);		break;	}	else		flag = 0;}if (flag == 0)cout << "\n Username not found";encryption.close();